Yeah I've been at it again, this time I've really gone and done it!

So you want to set you DX Render Mode? 

BMAX defaults to IID_IDirect3DHalDevice which means : Enables the Hardware (3D Card) Acceleration.

Now you can have :-

IID_IDirect3DRGBDevice : Uses CPU Emulation in RGB Mode (More Slow than HAL).
IID_IDirect3DMMXDevice : Uses CPU Emulation and Enables MMX Alpha Blending Acceleration (From Intel)
IID_IDirect3DHALDevice : Enables the Hardware (3D Card) Acceleration.
IID_IDirect3DTnLHalDevice : Uses the Hardware Acceleration (3D Card) and Enables Hardware Transformations And Lightings.

Heres how :-

Locate the d3d7.bmx file in the Mods folders, add the following lines at the bottom of the code.
Global IID_IDirect3DRGBDevice[]=[$A4665C60,$11CF2673,$AA001AA3,$5633B900]
Global IID_IDirect3DMMXDevice[]=[$881949a1,$11d0d6f3,$A000AB89,$294105C9]
Global IID_IDirect3DTnLHalDevice[]=[$f5049e78,$11d24861,$A00007a4,$a82906c9]

Locate the d3d7graphics.bmx file in the Mods folders and add these lines at the top of the code (after Strict):-
Global DXRenderType:Byte
Const RGB = 1
Const MMX = 2
Const TnL = 3

Now locate the Reset() Method in the same file and replace the line :
res=d3d.CreateDevice(IID_IDirect3DHALDevice,primarysurface,Varptr device)

with :
Select DXRenderType
	Case RGB
		res=d3d.CreateDevice(IID_IDirect3DRGBDevice,primarysurface,Varptr device)
	Case MMX
		res=d3d.CreateDevice(IID_IDirect3DMMXDevice,primarysurface,Varptr device)
	Case TnL
		res=d3d.CreateDevice(IID_IDirect3DTnLHalDevice,primarysurface,Varptr device)
	Default
		res=d3d.CreateDevice(IID_IDirect3DHALDevice,primarysurface,Varptr device)
End Select


To change the rendermode put the following line of code BEFORE the Graphics statement.
DXRenderType = MMX ' **OR WHATEVER MODE YOU WANT**

Do a bmk makemods and have fun.

The software emulation is very slow, if you want to go software then I would suggest not using the Cls command and implementing something like "Dirty Rects" to handle the screen clears and re-draws. 


Indiepath	(Posted 4 years ago) #2
I just did some tests and setting the DXRenderType to TnL gave me a 28% speed increase over the default render mode. 


Indiepath	(Posted 4 years ago) #3
OR you might want BMAX to fallback to whatever the hardware supports, replace the Select......End Select Code with :-
If Not d3d.CreateDevice(IID_IDirect3DTnLHalDevice,primarysurface,Varptr device)
	If Not d3d.CreateDevice(IID_IDirect3DHALDevice,primarysurface,Varptr device)
		If Not d3d.CreateDevice(IID_IDirect3DMMXDevice,primarysurface,Varptr device)
			If Not d3d.CreateDevice(IID_IDirect3DRGBDevice,primarysurface,Varptr device)
				Assert Not res,"CreateDevice Failed result="+res+", Do you really have a grahpics card?"	
			EndIf
		EndIf
	EndIf
EndIf

And Rem out this line :-
Assert Not res,"CreateDevice Failed result="+res



Steve Elliott	(Posted 4 years ago) #4
Great stuff! Hardware T & L - I can't keep up with your speed improvements. I haven't had time to test your single surface type (within a real program) so I'll have to take your word for the speed increase results.

But why isn't Mark doing this sort of thing? 


Indiepath	(Posted 4 years ago) #5
No comment about what BRL are doing.

My Findings so Far using "untweaked" command set based on 10,000 images rendered over 100 frames.

SOLIDBLEND and no Rotations : 28% Faster with T&L
ALPHABLEND and no Rotations : 34% Faster with T&L
SOLIDBLEND with Rotations : 28% Faster with T&L
ALPHABLEND with Rotations : 30% Faster with T&L

***IMPORTANT POINT - ALPHABLEND with T&L is 10% faster than SOLIDBLEND with T&L in all tests!!!!! 

