[COLOSSEUM - TO DO LIST]
	_ emitters should have a particle_archetype_index range (min/max) so that they can emit many different particles
	_ PARTICLE Method: draw_trail()
			draws a trail on the end of a particle proportional in length to its velocity
	_ explosions can also have short-lived "spark" emitters, and sparks have such trails as mentioned above
	_ velocity range for projectile emitters -- ties in to weapon accuracy
	_ angular velocity for particles
	_ angular velocity range for particle emitters
	_ motivator class for animating "treads" and handling debris and trail emitters, attached to complex agents
	/ class archetype libraries
			applications: when a turret needs to fire, copy a projectile from the projectile archetype library and emit it.
	_ put class archetype initialization into XML files
	_ create projectile emitter type
	_ weapon accuracy values, implemented with angle variance in the projectile emitter
	_ turret -- barrel travel time (delay from fire request until projectile actually emitted)
	_ attach various emitters to turret class to be called logically on fire()
	_ turret recoil
	_ emitter's parent can be a particle (or projectile)
			applications: missiles!
	_ alpha values for particles, birth & death
	_ tread emitter and manager list
	_ damage for player and enemies
	X encapsulate turret logic and make a class for it
	_ create xml format for levels
	_ create a level editor
	_ collision resolution with forces
	_ use acceleration values to smooth out movement (translation, rotation, etc)
	_ apply forces for specified amounts of time
	_ create arbitrary forces
	_ define the center of mass for objects
	_ create gibs for enemies
	_ make gibs spawn as particles when enemies die
	_ create scars
	_ create "shells" to be ejected from the ejector port of turret object
	_ create blocks for static environments that can be collided with
	_ create example arenas
	_ create a rudimentary AI
	_ create a few enemies with guns
	_ create visible damage which "sticks" to agents
	X separate main components into files
	